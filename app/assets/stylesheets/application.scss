/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */

$all:('', 0, 4000px);
$sm:('-sm', 0, 600px);
$lg:('-lg', 601px, 4000px);

$breakpoints: ($all, $sm, $lg);

@mixin sm {
	@media screen and (min-width: nth($sm, 2)) and (max-width: nth($sm, 3)) {
		@content;
	}
}

@mixin lg {
	@media screen and (min-width: nth($lg, 2)) and (max-width: nth($lg, 3)) {
		@content;
	}
}

@each $breakpoint in $breakpoints {
	$point: nth($breakpoint, 1);
  $min: nth($breakpoint, 2);
	$max: nth($breakpoint, 3);
	
  @media screen and (min-width: $min) and (max-width: $max) {
    .hide#{$point} {
      display: none;
    }

    .col#{$point},
    .col-reverse#{$point},
    .row#{$point} {
      display: flex;
    }

    .col#{$point} {
      flex-direction: column;
		}
		
		.col-reverse#{$point} {
			flex-direction: column-reverse;
		}

    .main-center#{$point} {
      justify-content: center;
    }

    .main-start#{$point} {
      justify-content: flex-start;
    }

    .main-end#{$point} {
      justify-content: flex-end;
    }

    .main-space-between#{$point} {
      justify-content: space-between;
    }

    .main-space-around#{$point} {
      justify-content: space-around;
    }

    .cross-center#{$point} {
      align-items: center;
    }

    .cross-start#{$point} {
      align-items: flex-start;
    }

    .cross-end#{$point} {
      align-items: flex-end;
    }

    .cross-baseline#{$point} {
      align-items: baseline;
    }

    .flex#{$point} {
      flex: 1 1;
    }

    .wrap#{$point} {
      flex-wrap: wrap;
    }

    .h-100#{$point} {
      height: 100%;
    }

		.shadow-15#{$point} {
			box-shadow: 0px 0px 15px 0px rgb(100, 100, 100);
    }
    
    .padding8#{$point} {
      padding: 8px;
    }
    
    .margin8#{$point} {
      margin: 8px;
    }
		
		.layout-padding8#{$point} {
			&>div,
			&>b,
			&>button,
			&>a,
			&>input {
				padding: 8px;
			}
		}
		
		.layout-padding4#{$point} {
			&>div,
			&>b,
			&>button,
			&>a,
			&>input {
				padding: 4px;
			}
		}
		
		.layout-margin8#{$point} {
			&>div,
			&>b,
			&>button,
			&>a,
			&>input {
				margin: 8px;
			}
		}
		
		.layout-margin4#{$point} {
			&>div,
			&>b,
			&>button,
			&>a,
			&>input {
				margin: 4px;
			}
		}

    @for $i from 1 through 20 {
      $width: percentage($i*5/100);

      .w-#{$i*5}#{$point} {
        width: $width;
      }
    }
	}
}

body {
  margin: 0;
  padding: 0;
}

nav {
  font-weight: bold;
  padding: 0 10px;
}

a {
  text-decoration: none;
  color: black;
  display: block;
  padding: 8px;
  border-radius: 3px;
  
  &:hover {
    color: black;
    background-color: lightgray;
  }
}

.new-post {
  margin-right: auto;
}
